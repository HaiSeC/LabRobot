/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import Negociacion.Generador;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import Negociacion.Imagenes;
import Negociacion.Robot;

/**
 *
 * @author Cris
 */
public class SalonPrincipal extends javax.swing.JFrame implements Runnable {
    private static Thread seguidor;
    private int speed = 100;
    private String Mov = "";
    private Robot rob = new Robot();
    private Generador gen = new Generador();
    /**
     * Creates new form MainBoard
     */
    public SalonPrincipal() {
        initComponents();
        //jPanel1.setSize(500,500);
        gen.generarjuego(jPanel1);
        rob.aparecer(jPanel1);
        this.seguidor = new Thread(this);
        


    }
    
    public static void Empezar() {
       seguidor.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
                       switch (evt.getKeyCode()) {
                
                case 37:
                    Mov = "Izquierda"; 
                    break;
                case 38:
                    Mov = "Arriba";
                    break;
                case 39:
                    Mov = "Derecha";
                    break;
                case 40:
                    Mov = "Abajo";
                    break;
            }// TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalonPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalonPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalonPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalonPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalonPrincipal().setVisible(true);
                Empezar();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
         int limiteX = jPanel1.getSize().width;
         int limiteY = jPanel1.getSize().height;
         int posX = rob.getX();
         int posY = rob.getY();
         
         Thread CT = Thread.currentThread();
         
         while(CT == seguidor) {
             switch (Mov) {
                 case "Izquierda": 
                    rob.setLocation(posX-5, posY);
                    break;
                case "Arriba":
                    rob.setLocation(posX, posY-5);
                    break;
                case "Derecha":
                    rob.setLocation(posX+5, posY);
                    break;
                case "Abajo":
                    rob.setLocation(posX, posY+5);
                    break;
             }
             try {
                 Thread.sleep(speed);
             } catch (Exception e) {
             }
         }
    }
}
